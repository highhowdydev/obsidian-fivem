// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  steam      String      @unique
  license    String
  discord    String
  ip         String
  characters Character[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Character {
  id          String             @id @default(uuid())
  stateId     Int                @unique @default(autoincrement())
  firstName   String
  lastName    String
  dob         String
  gender      String
  nationality String
  position    CharacterPosition?
  stats       CharacterStats?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  characterStatsId String?

  @@index([stateId, userId])
}

model CharacterStats {
  id          String    @id @default(uuid())
  dead        Boolean   @default(false)
  job         String
  health      Int       @default(200)
  armor       Int       @default(0)
  thirst      Float     @default(0.0)
  hunger      Float     @default(0.0)
  character   Character @relation(fields: [characterId], references: [id])
  characterId String    @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CharacterPosition {
  id          String    @id @default(uuid())
  x           Float
  y           Float
  z           Float
  heading     Float
  character   Character @relation(fields: [characterId], references: [id])
  characterId String    @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([characterId])
}
